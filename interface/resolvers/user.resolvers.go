package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	graphql1 "graphql-api/domain/models/graphql"
	graphql2 "graphql-api/infrastructure/graphql"
)

// CreateUser is the resolver for the CreateUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, params graphql1.CreateUserInput) (*graphql1.UserDetail, error) {
	return r.UserUsecase.Create(ctx, params)
}

// UpdateUser is the resolver for the UpdateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, params graphql1.UpdateUserInput) (*graphql1.UserDetail, error) {
	return r.UserUsecase.Update(ctx, params)
}

// User is the resolver for the User field.
func (r *queryResolver) User(ctx context.Context, id int64) (*graphql1.UserDetail, error) {
	return r.UserUsecase.Fetch(ctx, int64(id))
}

// Mutation returns graphql2.MutationResolver implementation.
func (r *Resolver) Mutation() graphql2.MutationResolver { return &mutationResolver{r} }

// Query returns graphql2.QueryResolver implementation.
func (r *Resolver) Query() graphql2.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
